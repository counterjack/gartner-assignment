# Generated by Django 3.0.4 on 2020-03-21 06:41

from django.db import migrations

from django.contrib.auth.hashers import make_password
from django.db import transaction

def create_test_users(apps, schema_editor):
    """[summary]

    Arguments:
        apps {[type]} -- [description]
        schema_editor {[type]} -- [description]
    """
    User = apps.get_model('auth', 'User')
    Group = apps.get_model('auth', 'Group')
    test_users =[{
        "username": "manager",
        "email": "manager@yopmail.com",
        "password": "thinksmart",
        "first_name": "Test",
        "last_name": "Manager",
        "groups": ["Manager"]

    }, {
        "username": "associate",
        "email": "associate@yopmail.com",
        "password": "thinksmart",
        "first_name": "Test",
        "last_name": "associate",
        "groups": ["Associate"]

    },
    {
        "username": "client",
        "email": "client@yopmail.com",
        "password": "thinksmart",
        "first_name": "Test",
        "last_name": "Client",
        "groups": ["Client"]

    }]
    with transaction.atomic():
        for user in test_users:
            _user = User.objects.create(
                first_name=user["first_name"],
                last_name=user["last_name"],
                email = user["email"],
                username=user["username"],
            )

            _user.password = make_password('thinksmart')
            _user.save()
            group = Group.objects.filter(name__in=user["groups"])
            _user.groups.add(*group)


def reverse_user(apps, schema_editor):
    emails = ["manager@yopmail.com", "associate@yopmail.com", "client@yopmail.com"]
    User = apps.get_model('auth', 'user')
    for email in emails:
        User.objects.filter(email=email).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0002_create_default_groups'),
    ]

    operations = [
        migrations.RunPython(create_test_users, reverse_user),
    ]

